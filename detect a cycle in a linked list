class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

def detect_cycle(head):
    """Detects a cycle in a linked list using the Floyd's Cycle Detection Algorithm.

    Args:
        head: The head node of the linked list.

    Returns:
        True if a cycle is found, False otherwise.
    """

    slow = fast = head

    while fast and fast.next:
        slow = slow.next
        fast = fast.next.next

        if slow == fast:
            return True

    return False

# Example usage:
node1 = Node(1)
node2 = Node(2)
node3 = Node(3)
node4 = Node(4)
node5 = Node(5)

node1.next = node2
node2.next = node3
node3.next = node4
node4.next = node5
node5.next = node2  # Create a cycle

if detect_cycle(node1):
    print("Cycle detected")
else:
    print("No cycle detected")
